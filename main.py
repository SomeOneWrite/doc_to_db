import sqlite3
import json

tables_materials = [
    'materials',
]

table_machines = [
    'machines'
]

table_workers = [
    'workers'
]


def db_to_json(db_name):
    con = sqlite3.connect(db_name)

    query = con.cursor()
    data = dict()
    c = 0
    for table in tables_materials:
        result = query.execute("select * from {}".format(table)).fetchall()

        data[table] = list()

        for res in result:
            prefix = res[0][9:]
            record = {
                'code': res[1],
                'new_code': res[0][9:],
                'name': res[2],
                'unit': res[3],
                'prefixChapter': res[4],
                'prefixOKVD': res[5]
            }
            c += 1
            data[table].append(record)
    for table in table_workers:
        result = query.execute("select * from {}".format(table)).fetchall()

        data[table] = list()

        for res in result:
            record = {
                'new_code': res[0],
                'code': res[1],
                'name': res[2],
                'unit': res[3]
            }
            c += 1
            data[table].append(record)
    for table in table_machines:
        result = query.execute("select * from {}".format(table)).fetchall()

        data[table] = list()

        for res in result:
            record = {
                'new_code': res[0][9:],
                'code': res[1],
                'name': res[2],
                'unit': res[3]
            }
            c += 1
            data[table].append(record)
    print(c)
    json.dump(data, open(db_name + '.json', 'w', encoding="utf-8"), indent=4, ensure_ascii=False)


lst = list()

prefixes = {
    "23.65": "Производство изделий из асбестоцемента и волокнистого цемента",
    "23.99": "Производство прочей неметаллической минеральной продукции, не включенной в другие группировки",
    "17.12": "Производство бумаги и картона",
    "08.99": "Добыча прочих полезных ископаемых, не включенных в другие группировки",
    "19.20": "Производство нефтепродуктов",
    "20.30": "Производство красок, лаков и аналогичных материалов для нанесения покрытий, полиграфических красок и мастик",
    "20.59": "Производство прочих химических продуктов, не включенных в другие группировки",
    "20.14": "Производство прочих основных органических химических веществ",
    "20.11": "Производство промышленных газов",
    "20.15": "Производство удобрений и азотных соединений",
    "08.91": "Добыча минерального сырья для химической промышленности и производства минеральных удобрений",
    "20.13": "Производство прочих основных неорганических химических веществ",
    "08.11": "Добыча декоративного и строительного камня, известняка, гипса, мела и сланцев",
    "20.16": "Производство пластмасс и синтетических смол в первичных формах",
    "20.12": "Производство красителей и пигментов",
    "20.17": "Производство синтетического каучука в первичных формах",
    "24.45": "Производство прочих цветных металлов",
    "25.73": "Производство инструмента",
    "28.92": "Производство машин и оборудования для добычи полезных ископаемых и строительства",
    "26.51": "Производство инструментов и приборов для измерения, тестирования и навигации",
    "08.12": "Разработка гравийных и песчаных карьеров, добыча глины и каолина",
    "24.10": "Производство чугуна, стали и ферросплавов",
    "28.29": "Производство прочих машин и оборудования общего назначения, не включенного в другие группировки",
    "22.23": "Производство пластмассовых изделий, используемых в строительстве",
    "23.19": "Производство и обработка прочих стеклянных изделий, включая технические изделия из стекла",
    "22.29": "Производство прочих пластмассовых изделий",
    "25.11": "Производство строительных металлических конструкций, изделий и их частей",
    "25.99": "Производство прочих готовых металлических изделий, не включенных в другие группировки",
    "22.21": "Производство пластмассовых плит, полос, труб и профилей",
    "22.19": "Производство прочих резиновых изделий",
    "27.40": "Производство электрических ламп и осветительного оборудования",
    "30.20": "Производство железнодорожных локомотивов и подвижного состава",
    "23.62": "Производство гипсовых изделий для использования в строительстве",
    "23.61": "Производство изделий из бетона для использования в строительстве",
    "23.69": "Производство прочих изделий из гипса, бетона или цемента",
    "17.24": "Производство обоев",
    "13.93": "Производство ковров и ковровых изделий",
    "13.95": "Производство нетканых текстильных материалов и изделий из них, кроме одежды",
    "13.92": "Производство готовых текстильных изделий, кроме одежды",
    "24.33": "Производство профилей с помощью холодной штамповки или гибки",
    "25.93": "Производство изделий из проволоки, цепей и пружин",
    "17.21": "Производство гофрированной бумаги и картона, бумажной и картонной тары",
    "13.94": "Производство канатов, веревок, шпагата и сетей",
    "17.23": "Производство бумажных канцелярских принадлежностей",
    "35.11": "Производство электроэнергии",
    "25.72": "Производство замков и петель",
    "26.30": "Производство коммуникационного оборудования",
    "13.96": "Производство прочих технических и промышленных текстильных изделий",
    "13.20": "Производство текстильных тканей",
    "24.42": "Производство алюминия",
    "23.14": "Производство стекловолокна",
    "17.29": "Производство прочих изделий из бумаги и картона",
    "27.33": "Производство электроустановочных изделий",
    "24.44": "Производство меди",
    "24.43": "Производство свинца, цинка и олова",
    "32.12": "Производство ювелирных изделий и аналогичных изделий",
    "20.41": "Производство мыла и моющих, чистящих и полирующих средств",
    "13.10": "Подготовка и прядение текстильных волокон",
    "01.29": "Выращивание прочих многолетних культур",
    "19.10": "Производство кокса",
    "24.41": "Производство драгоценных металлов",
    "05.10": "Добыча и обогащение угля и антрацита",
    "25.94": "Производство крепежных изделий",
    "20.60": "Производство химических волокон",
    "20.51": "Производство взрывчатых веществ",
    "27.12": "Производство электрической распределительной и регулирующей аппаратуры",
    "23.70": "Резка, обработка и отделка камня",
    "20.52": "Производство клеев",
    "32.99": "Производство прочих готовых изделий, не включенных в другие группировки",
    "10.71": "Производство хлеба и мучных кондитерских изделий, тортов и пирожных недлительного хранения",
    "10.84": "Производство приправ и пряностей",
    "23.64": "Производство сухих бетонных смесей",
    "23.32": "Производство кирпича, черепицы и прочих строительных изделий из обожженной глины",
    "02.30": "Сбор и заготовка пищевых лесных ресурсов, недревесных лесных ресурсов и лекарственных растений",
    "24.34": "Производство проволоки методом холодного волочения",
    "28.24": "Производство ручных инструментов с механизированным приводом",
    "16.23": "Производство прочих деревянных строительных конструкций и столярных изделий",
    "23.91": "Производство абразивных изделий",
    "13.99": "Производство прочих текстильных изделий, не включенных в другие группировки",
    "28.22": "Производство подъемно-транспортного оборудования",
    "24.20": "Производство стальных труб, полых профилей и фитингов",
    "27.51": "Производство бытовых электрических приборов",
    "22.11": "Производство резиновых шин, покрышек и камер; восстановление резиновых шин и покрышек",
    "22.22": "Производство пластмассовых изделий для упаковывания товаров",
    "23.12": "Формирование и обработка листового стекла",
    "23.11": "Производство листового стекла",
    "38.32": "Утилизация отсортированных материалов",
    "23.52": "Производство извести и гипса",
    "23.51": "Производство цемента",
    "23.63": "Производство товарного бетона",
    "23.20": "Производство огнеупорных изделий",
    "23.31": "Производство керамических плит и плиток",
    "25.12": "Производство металлических дверей и окон",
    "25.30": "Производство паровых котлов, кроме котлов центрального отопления",
    "25.29": "Производство прочих металлических цистерн, резервуаров и емкостей",
    "24.32": "Производство холоднотянутогоштрипса",
    "31.01": "Производство мебели для офисов и предприятий торговли",
    "28.25": "Производство промышленного холодильного и вентиляционного оборудования",
    "16.10": "Распиловка и строгание древесины",
    "16.22": "Производство сборных паркетных покрытий",
    "16.21": "Производство шпона, фанеры, деревянных плит и панелей",
    "02.20": "Лесозаготовки",
    "31.02": "Производство кухонной мебели",
    "28.13": "Производство прочих насосов и компрессоров",
    "16.29": "Производство прочих деревянных изделий; производство изделий из пробки, соломки и материалов для плетения",
    "21.20": "Производство лекарственных препаратов и материалов, применяемых в медицинских целях",
    "32.30": "Производство спортивных товаров",
    "28.99": "Производство прочих машин и оборудования специального назначения, не включенных в другие группировки",
    "25.91": "Производство металлических бочек и аналогичных емкостей",
    "08.92": "Добыча и агломерация торфа",
    "01.19": "Выращивание прочих однолетних культур",
    "02.10": "Лесоводство и прочая лесохозяйственная деятельность",
    "01.30": "Выращивание рассады",
    "01.11": "Выращивание зерновых (кроме риса), зернобобовых культур и семян масличных культур",
    "20.20": "Производство пестицидов и прочих агрохимических продуктов",
    "28.14": "Производство прочих кранов и клапанов",
    "28.12": "Производство гидравлического и пневматического силового оборудования",
    "23.42": "Производство керамических санитарно-технических изделий",
    "24.31": "Производство стальных прутков и сплошных профилей методом холодного волочения",
    "25.21": "Производство радиаторов и котлов центрального отопления",
    "27.52": "Производство бытовых неэлектрических приборов",
    "27.90": "Производство прочего электрического оборудования",
    "26.40": "Производство бытовой электроники",
    "28.15": "Производство подшипников, зубчатых передач, элементов механических передач и приводов",
    "27.32": "Производство прочих проводов и кабелей для электронного и электрического оборудования",
    "27.31": "Производство волоконо-оптических кабелей",
    "23.43": "Производство керамических изоляторов и изолирующей арматуры",
    "24.51": "Литье чугуна",
    "27.11": "Производство электродвигателей, электрогенераторов и трансформаторов",
    "26.11": "Производство элементов электронной аппаратуры",
    "26.20": "Производство компьютеров и периферийного оборудования",
    "27.20": "Производство электрических аккумуляторов и аккумуляторных батарей",
    "28.93": "Производство машин и оборудования для производства пищевых продуктов, напитков и табачных изделий",
    "28.21": "Производство печей, термокамер и печных горелок",
    "26.60": "Производство облучающего и электротерапевтического оборудования, применяемого в медицинских целях"
}


def checkPrefixes(db_name):
    conn = sqlite3.connect(db_name)
    query = conn.cursor()
    res = query.execute("select * from materials").fetchall()
    count = 0
    for r in res:
        okvd = r[5]
        query.execute("update materials set prefixOKVD = ? where id1 = ?", [okvd + " - " + prefixes[okvd], r[0]])
        print(okvd + " - " + prefixes[okvd])
        count += 1
        print(query.execute("select * from materials where id1 = ?", [r[0]]).fetchall())
        if (count > 10):
            exit(0)
        print(count)

    conn.commit()


def parse_db():
    conn = sqlite3.connect('minstroy_old.odb')
    conn_2017 = sqlite3.connect('result.sqlite')
    res_con = sqlite3.connect('result2.sqlite')

    query = conn.cursor()
    query7 = conn_2017.cursor()
    res_query = res_con.cursor()

    is_all = False

    for table in tables_materials:
        if table == 'materialsdiff':
            res = query.execute("select * from {}".format("materials")).fetchall()
        else:
            res = query.execute("select * from {}".format(table)).fetchall()

        res_query.execute(
            "create table if not exists {}(id1 text not null primary key, id2 text not null, name text, price real, price_driver real)".format(
                table))
        res_7 = query7.execute("select * from {}".format(table)).fetchall()
        for r in res:
            for r7 in res_7:
                r1_str = r[1].strip()
                r7_str = r7[1].strip()
                # print("r1 = {} r2 = {} result = {}".format(r1_str, r7_str, LCS_DYN(r1_str, r7_str)))
                ls = r1_str.split(' ')
                ls_2 = r7_str.split(' ')
                finded = True
                if len(ls) == len(ls_2):
                    for i in range(0, len(ls)):
                        if ls[i].lower() != ls_2[i].lower():
                            finded = False
                            break
                    if finded:
                        try:
                            res_query.execute("insert into {} (id1, id2, name) values(?, ?, ?)".format(table),
                                              [r[0], r7[0], r[1]])
                        except:
                            a = 2
                        print("Finded {} | {} ".format(r[1], r7[1]))
                        res_con.commit()
                        is_all = True
                        finded = False
                        break

                if r1_str == r7_str or r[0] == r7[0]:
                    try:
                        res_query.execute("insert into {} (id1, id2, name) values(?, ?, ?)".format(table),
                                          [r[0], r7[0], r[1]])
                    except:
                        a = 2
                    print("Finded {} | {} ".format(r[1], r7[1]))
                    res_con.commit()
                    is_all = True
                    break
            if is_all:
                is_all = False
            else:
                lst.append(r)
                # try:
                #     res_query.execute("insert into {} (id1, id2, name) values(?, ?, ?)".format(table), [r[0], 0, r[1]])
                # except:
                #     pass
                # res_con.commit()
    res_con.commit()
    print(lst)
    res_query.execute(
        "create table if not exists materials_out(id1 text not null primary key, id2 text not null, name text, price real, price_driver real)")
    for l in lst:
        try:
            res_query.execute("insert into materials_out (id1, id2, name) values(?, ?, ?)", [l[0], l[1], l[2]])
        except:
            pass

    res_con.commit()


# parse_db()

checkPrefixes("r.sqlite")
db_to_json("r.sqlite")
